#!/bin/bash
# Run this script from the ChaNGa directory to run the normal ChaNGa 
# configure script and echo the compile-time flags to ChaNGa.config
# The CHARM_DIR environmental variable is set in the charmdir file
#
# This script is a simple wrapper around configure
#
cwd=`pwd`
# Directory of the script
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# Set up the charm directory
if [ -e "$cwd/config.charmdir" ]; then
    charmdirfile=$cwd/config.charmdir
elif [ -e "$DIR/charmdir" ]; then
    charmdirfile=$DIR/charmdir
fi
if [ -e "$charmdirfile" ]; then
    export CHARM_DIR=`egrep -v '(^#|^\s*$|^\s*\t*#)' $charmdirfile | xargs`
elif [ ! -z "$CHARM_DIR" ]; then
    echo "Using already defined variable CHARM_DIR"
fi
# run configure and pass all command-line arguments to it
$cwd/configure "$@"
# parse the generated Makefile and place all compile-time #defines into 
# ChaNGa.config for IDE to parse
return_code=$?

# Check to see if one of the args passed to configure was --help
helpflag=0
for arg in "$@"
do
    if [ "${arg:-no}" == "--help" ] ; then
        helpflag=1
    fi
done

# IF configure completed successfully AND we didn't pass it --help, THEN 
# parse the compile-time flags and save them to ChaNGa.config
# Also save the build commands that were used
if [ "$return_code" == "0" ] && [ $helpflag -eq 0 ]
then
    
    echo "Compile time flags: "
    $DIR/get_define_flags.py
    echo "Charm directory (defined in config.charmdir): " $CHARM_DIR
    echo $CHARM_DIR > $cwd/config.charmdir
    config=$cwd/config.sh
    echo "#!/bin/bash" > $config
    echo "# Re-run the most recent configure command by executing this script" >> $config
    echo "$scriptpath $@" >> $config
    echo "" >> $config
    chmod a+x $cwd/config.sh
    echo "Saved configure command to config.sh.  You can re-run the configure "\
    "command by executing config.sh"
fi

